name: Build

on:
  push:
    branches:
      - master
  pull_request:
  merge_group:
  workflow_dispatch: # allows to be run manually

env:
  DEFAULT_CONTAINER_IMAGE_ID: ruby3.1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        container_image:
          - id: ruby3.1
            image: 'docker.io/library/ruby:3.1-bookworm' # Ruby 3.1 (in Debian 12 - stable)
          - id: ruby3.2
            image: 'docker.io/library/ruby:3.2-bookworm'
          - id: ruby3.3
            image: 'docker.io/library/ruby:3.3-bookworm' # Ruby 3.3 (will be in Debian 13, now testing)
          - id: ruby3.4
            image: 'docker.io/library/ruby:3.4-bookworm'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Cache installed Gems for the project
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ matrix.container_image.id }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ matrix.container_image.id }}-gems-
      - name: Build site
        env:
          CONTAINER_IMAGE: ${{ matrix.container_image.image }}
        run: make all_in_container
      - name: Save built site (${{ matrix.container_image.id }})
        uses: actions/upload-artifact@v4
        with:
          name: _site_${{ matrix.container_image.id }}
          path: _site
          retention-days: 30
      - name: Save built site (default)
        if: ${{ matrix.container_image.id == env.DEFAULT_CONTAINER_IMAGE_ID }}
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 30
